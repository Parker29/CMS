doctype html
html(lang='en')
  head
    title CMS   
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css')
    //- link(rel="stylesheet" href="/css/style.css")
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js')
  style.
    .grid-container {
        display: grid;
        grid-template-columns: auto auto auto auto;
        grid-gap: 10px;
        padding: 10px;
        position: absolute;
    }

    .grid-container > div {
        text-align: center;
        padding: 20px 0;
        font-size: 25px;
        width: 400px;
        height: 400px;
    }

  body
    .grid-container#cluster
        .panel.panel-primary#addNode
            .panel-body
                form
                    input#name.form-control(type='text', placeholder='Enter Container Name', name='name' autocomplete="off")
                    input#network.form-control(type='text', value="net1" placeholder='net1', name='network' autocomplete="off")
                    input#port.form-control(type='text', placeholder='Enter port', name='port' autocomplete="off")
                    br
                    button.btn.btn-primary.btn-block(type='button', aria-label='Left Align', style="height:100px;font-size: larger;" onclick="addInstance(event)")
                        | Add Instance

script.
    let ps=JSON.parse(decodeURI(`#{ps}`));
    ps.forEach(item =>{
            if(item.Name!==undefined){
                let name=item.Name;
                delete item["Name"]
                let detail="";
                for(let key in item){
                    if(item[key] !== "")
                        detail+=`<b>${key}</b>: ${item[key]}<br/>`
                }
                let addr=item["Ports"].split("-")
                if(addr.length==2)
                {
                    addr=addr[0].split(":");
                    addr=addr[1];
                    detail+=`<b>CLI:</b><a href="http://#{ip}:${addr}" target="_blank">http://#{ip}:${addr}</a>`
                }
                generateNode(name,detail,name)
            }
    })
    function addInstance(event){
        let name=document.getElementById("name").value;
        let network=document.getElementById("network").value;
        let port=document.getElementById("port").value;
        let data=[];
        data.push({
            name: name,
            network: network,
            port: port
        })
        fetch("/addInstance",{
            method: "post",
            headers: {
                    'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({data})
        })
        .then(response=>{
            return response.json()
        })
        .then((data)=>{
            if(data.status){
                alert(data.msg);
                window.location.href = '/';
            }
            else{
                alert(data.msg);
            }
        })
    }
    function generateNode(nodename,details,name){
        let cluster=document.getElementById("cluster");
        let addNode=document.getElementById("addNode");
        let newNode=document.createElement("div");
        newNode.className="panel panel-primary";
        newNode.innerHTML=`
            <div class="panel-heading" onclick="">${nodename}</div>
                <div class="panel-body">${details}</div>
                <button class="btn btn-success" onclick=toggleState("start","${name}")>Start</button>
                <button class="btn btn-danger" onclick=toggleState("stop","${name}")>Stop</button>`
        cluster.insertBefore(newNode,addNode);
    }
    function toggleState(state,name){
        let data=[];
        data.push({
            name: name,
            state: state
        });
        fetch("/toggle",{
            method: "post",
            headers: {
                    'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({data})
        })
        .then(response=>{
            return response.json()
        })
        .then((data)=>{
            if(data.status){
                window.location.href = '/';
            }
            else{
                alert(data.msg);
            }
        })
    }